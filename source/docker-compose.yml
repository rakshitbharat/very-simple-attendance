services:
  db:
    image: postgres:15
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=attendance
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: postgres -c 'max_connections=1000' -c 'shared_buffers=128MB'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DATABASE_URL=postgresql://postgres:postgres@db:5432/attendance
        - JWT_SECRET=K9#mP4$nQ7*vX3jR5@fB1wZ8cA6&hL2yE8%tM5^uN9+gV4kD7!sW3xC9bH4p
        - NEXTAUTH_SECRET=your-secret-key
        - NEXTAUTH_URL=http://localhost:3000
        - NODE_ENV=development
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/attendance
      - JWT_SECRET=K9#mP4$nQ7*vX3jR5@fB1wZ8cA6&hL2yE8%tM5^uN9+gV4kD7!sW3xC9bH4p
      - NEXTAUTH_SECRET=your-secret-key
      - NEXTAUTH_URL=http://localhost:3000
    volumes:
      - ./node_modules:/app/node_modules
      - ./.next:/app/.next
      - ./public:/app/public
      - ./app:/app/app
      - ./components:/app/components
      - ./lib:/app/lib
      - ./styles:/app/styles
      - ./types:/app/types
      - ./prisma:/app/prisma
      - ./scripts:/app/scripts
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  node_modules:
