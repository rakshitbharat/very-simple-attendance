version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=password
      - DB_NAME=attendance_system
      - ADMIN_EMAIL=admin@admin.com
      - ADMIN_PASSWORD=admin123
      - DATABASE_URL=mysql://root:password@db:3306/attendance_system
      - JWT_SECRET=K9#mP4$nQ7*vX3jR5@fB1wZ8cA6&hL2yE8%tM5^uN9+gV4kD7!sW3xC9bH4p
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        max_attempts: 3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=attendance_system
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./source/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
